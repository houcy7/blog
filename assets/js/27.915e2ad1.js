(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{518:function(t,e,s){"use strict";s.r(e);var o=s(4),n=Object(o.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("div",{staticClass:"custom-block tip"},[s("ul",[s("li",[s("RouterLink",{attrs:{to:"/blogs/docs/front-end/blog/blog-deploy-1.html"}},[t._v("博客的搭建 - 上")])],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/blogs/docs/front-end/blog/blog-deploy-2.html"}},[t._v("博客的搭建 - 下")])],1)])]),t._v(" "),s("h2",{attrs:{id:"设计原则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#设计原则"}},[t._v("#")]),t._v(" 设计原则 "),s("Badge",{attrs:{text:"了解",type:"warning"}})],1),t._v(" "),s("h3",{attrs:{id:"开闭原则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#开闭原则"}},[t._v("#")]),t._v(" 开闭原则")]),t._v(" "),s("p",[t._v("开闭原则(Open-Closed Principle, OCP)是指一个软件实体如类、模块和函数应该"),s("code",[t._v("对扩展开放，对修改关闭")]),t._v("。\n所谓的开闭，也正是对扩展和修改两个行为的一个原则。强调 的是用抽象构建框架，用实现扩展细节。\n可以提高软件系统的可复用性及可维护性。开闭原则，是面向对象设计中最基础的设计原则。它指导我们如何建立稳定灵活的系统，\n例如:我们版本更新，我尽可能不修改源代码，但是可以增加新功能。 在现实生活中对于开闭原则也有体现。\n比如，很多互联网公司都实行弹性制作息时间， 规定每天工作8 小时。意思就是说，对于每天工作 8 小时这个规定是关闭的，\n但是你什么时候来，什么时候走是开放的。早来早走，晚来晚走。")])])}),[],!1,null,null,null);e.default=n.exports}}]);